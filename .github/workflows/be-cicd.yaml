name: Backend CI/CD

on:
  push:
    branches:
      - master
    paths:
      - 'applications/backend/**'

env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: hungnv-ecr-repo
  EKS_CLUSTER_NAME: hungnv-eks-cluster

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG applications/backend
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest applications/backend
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

    - name: Update kubeconfig
      run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

    - name: Create Kubernetes Secret
      run: |
        kubectl create secret generic db-secrets \
          --from-literal=AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
          --from-literal=AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
          --from-literal=AWS_REGION="ap-south-1" \
          
      continue-on-error: true

    - name: Deploy backend
      run: | 
        kubectl delete deployment backend
        kubectl apply -f applications/backend/k8s/deployment.yaml


    # - name: Update image in deployment
    #   run: |
    #     kubectl set image deployment/backend backend=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    #     kubectl rollout status deployment/backend



    # --from-literal=DB_HOST=${{ secrets.DB_HOST }} \
          # --from-literal=DB_NAME=${{ secrets.DB_NAME }} \
          # --from-literal=DB_USER=${{ secrets.DB_USER }} \
          # --from-literal=DB_PASSWORD=${{ secrets.DB_PASSWORD }}